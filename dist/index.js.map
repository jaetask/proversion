{"version":3,"sources":["../src/immer.ts","../src/utils/errors.ts","../src/utils/common.ts","../src/types/types-internal.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/utils/env.ts","index.js"],"names":["immer","die","error","args","Error","length","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","Array","isArray","DRAFTABLE","constructor","isMap","isSet","original","base_","each","obj","iter","getArchtype","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","shallowCopy","base","invokeGetters","slice","clone","create","desc","getOwnPropertyDescriptor","enumerable","defineProperty","writable","configurable","freeze","deep","isFrozen","set","add","clear","delete","dontMutateFrozenCollections","_","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","propOrOldValue","t","autoFreeze_","peek","Reflect","markChangedProxy","copy","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","markChanged","markChangedES5_","enableES5","finalizing_","clonePotentialDraft","markChangesSweep","drafts","i","hasArrayChanges","hasObjectChanges","keys","baseValue","descriptor","assertUnrevoked","JSON","stringify","descriptors","this","markChangesRecursively","object","undefined","min","Math","enablePatches","deepClonePatchValue","map","from","entries","cloned","ADD","applyPatches_","patches","patch","op","type","splice","basePath","inversePatches","assignedValue","origValue","delta","start","end","replaceCount","unshift","rootState","replacement","enableMapSet","__extends","d","b","__","extendStatics","prepareMapCopy","prepareSetCopy","setPrototypeOf","__proto__","p","DraftMap","size","cb","thisArg","_value","_this","values","iterator","iteratorSymbol","_this2","next","r","done","_this3","DraftSet","enableAllPlugins","castDraft","castImmutable","hasSymbol","Symbol","hasProxies","errors","data","getOwnPropertySymbols","getOwnPropertyNames","deleteProperty","owner","fn","arguments","apply","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","hasError","Promise","then","arg1","arg2","ip","createDraft","finishDraft","applyPatches","applyPatchesImpl","proversion","converters","addConverter","to","converter","version","upgrade","subject","convertersToRun","Number","sort","filter","reduce","current","applied"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t19: \"plugin not loaded\",\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (value && value[DRAFT_STATE]) {\n\t\treturn value[DRAFT_STATE].base_ as any\n\t}\n\t// otherwise return undefined\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void\n): void\nexport function each(obj: any, iter: any) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\townKeys(obj).forEach(key => iter(key, obj[key], obj))\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy<T extends AnyObject | AnyArray>(\n\tbase: T,\n\tinvokeGetters?: boolean\n): T\nexport function shallowCopy(base: any, invokeGetters = false) {\n\tif (Array.isArray(base)) return base.slice()\n\tconst clone = Object.create(Object.getPrototypeOf(base))\n\teach(base, (key: any) => {\n\t\tif (key === DRAFT_STATE) {\n\t\t\treturn // Never copy over draft state.\n\t\t}\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, key)!\n\t\tlet {value} = desc\n\t\tif (desc.get) {\n\t\t\tif (!invokeGetters) die(1)\n\t\t\tvalue = desc.get.call(base)\n\t\t}\n\t\tif (desc.enumerable) {\n\t\t\tclone[key] = value\n\t\t} else {\n\t\t\tObject.defineProperty(clone, key, {\n\t\t\t\tvalue,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t})\n\t\t}\n\t})\n\treturn clone\n}\n\nexport function freeze(obj: any, deep: boolean): void {\n\tif (isDraft(obj) || Object.isFrozen(obj) || !isDraftable(obj)) return\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (_, value) => freeze(value, true))\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyArray,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\tmarkChangedES5_(state: ImmerState): void\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(__DEV__ ? 18 : 19, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tplugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tfinalizing_: boolean\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tshallowCopy,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tis,\n\tget,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (Object.isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(value, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path)\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_, true))\n\t\t\t\t: state.copy_\n\t\t// finalize all children of the copy\n\t\teach(result as any, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Unchanged draft properties are ignored.\n\tif (parentState && is(childValue, get(parentState!.base_, prop))) {\n\t\treturn\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","\"use strict\"\nimport {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\tdrafts_?: {\n\t\t[property: string]: Drafted<any, any>\n\t}\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// Any property proxies.\n\t\tdrafts_: {},\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nconst objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\t\tlet {drafts_: drafts} = state\n\n\t\t// Check for existing draft in unmodified state.\n\t\tif (!state.modified_ && has(drafts, prop)) {\n\t\t\treturn drafts![prop as any]\n\t\t}\n\n\t\tconst value = latest(state)[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\t// Check for existing draft in modified state.\n\t\tif (state.modified_) {\n\t\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\t\tif (value !== peek(state.base_, prop)) return value\n\t\t\t// Store drafts on the copy (when one exists).\n\t\t\t// @ts-ignore\n\t\t\tdrafts = state.copy_\n\t\t}\n\n\t\treturn (drafts![prop as any] = createProxy(\n\t\t\tstate.scope_.immer_,\n\t\t\tvalue,\n\t\t\tstate\n\t\t))\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop: string /* strictly not, but helps TS */, value) {\n\t\tif (!state.modified_) {\n\t\t\tconst baseValue = peek(state.base_, prop)\n\t\t\t// Optimize based on value's truthiness. Truthy values are guaranteed to\n\t\t\t// never be undefined, so we can avoid the `in` operator. Lastly, truthy\n\t\t\t// values may be drafts, but falsy values are never drafts.\n\t\t\tconst isUnchanged = value\n\t\t\t\t? is(baseValue, value) || value === state.drafts_![prop]\n\t\t\t\t: is(baseValue, value) && prop in state.base_\n\t\t\tif (isUnchanged) return true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChangedProxy(state)\n\t\t}\n\t\tstate.assigned_[prop] = true\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChangedProxy(state)\n\t\t} else if (state.assigned_[prop]) {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (desc) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable =\n\t\t\t\tstate.type_ !== ProxyTypeProxyArray || prop !== \"length\"\n\t\t}\n\t\treturn desc\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n/**\n * Map drafts\n */\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey): any {\n\tconst state = draft[DRAFT_STATE]\n\tconst desc = Reflect.getOwnPropertyDescriptor(\n\t\tstate ? latest(state) : draft,\n\t\tprop\n\t)\n\treturn desc && desc.value\n}\n\nexport function markChangedProxy(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (\n\t\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\t\tstate.type_ === ProxyTypeProxyArray\n\t\t) {\n\t\t\tconst copy = (state.copy_ = shallowCopy(state.base_))\n\t\t\teach(state.drafts_!, (key, value) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tcopy[key] = value\n\t\t\t})\n\t\t\tstate.drafts_ = undefined\n\t\t}\n\n\t\tif (state.parent_) {\n\t\t\tmarkChangedProxy(state.parent_)\n\t\t}\n\t}\n}\n\nfunction prepareCopy(state: ProxyState) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tNOTHING,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tmarkChangedProxy,\n\tcreateProxyProxy,\n\tfreeze,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tisMinified,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = __DEV__ ? true /* istanbul ignore next */ : !isMinified\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && draft[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (!hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n\nexport function markChanged(immer: Immer, state: ImmerState) {\n\tif (immer.useProxies_) {\n\t\tmarkChangedProxy(state)\n\t} else {\n\t\tgetPlugin(\"ES5\").markChangedES5_(state)\n\t}\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tObjectish,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tcreateProxy,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tAnyObject,\n\tgetCurrentScope,\n\tdie\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tscope.drafts_!.forEach((draft: any) => {\n\t\t\t;(draft[DRAFT_STATE] as ES5State).finalizing_ = true\n\t\t})\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft: any = clonePotentialDraft(base)\n\n\t\teach(draft, prop => {\n\t\t\tproxyProperty(draft, prop, isArray || isEnumerable(base, prop))\n\t\t})\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalizing_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\tbase_: base,\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// Access a property without creating an Immer draft.\n\tfunction peek(draft: Drafted, prop: PropertyKey) {\n\t\tconst state: ES5State = draft[DRAFT_STATE]\n\t\tif (state && !state.finalizing_) {\n\t\t\tstate.finalizing_ = true\n\t\t\tconst value = draft[prop]\n\t\t\tstate.finalizing_ = false\n\t\t\treturn value\n\t\t}\n\t\treturn draft[prop]\n\t}\n\n\tfunction get(state: ES5State, prop: string | number) {\n\t\tassertUnrevoked(state)\n\t\tconst value = peek(latest(state), prop)\n\t\tif (state.finalizing_) return value\n\t\t// Create a draft if the value is unmodified.\n\t\tif (value === peek(state.base_, prop) && isDraftable(value)) {\n\t\t\tprepareCopy(state)\n\t\t\t// @ts-ignore\n\t\t\treturn (state.copy_![prop] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t}\n\n\tfunction set(state: ES5State, prop: string | number, value: any) {\n\t\tassertUnrevoked(state)\n\t\tstate.assigned_[prop] = true\n\t\tif (!state.modified_) {\n\t\t\tif (is(value, peek(latest(state), prop))) return\n\t\t\tmarkChangedES5_(state)\n\t\t\tprepareCopy(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t}\n\n\tfunction markChangedES5_(state: ImmerState) {\n\t\tif (!state.modified_) {\n\t\t\tstate.modified_ = true\n\t\t\tif (state.parent_) markChangedES5_(state.parent_)\n\t\t}\n\t}\n\n\tfunction prepareCopy(state: ES5State) {\n\t\tif (!state.copy_) state.copy_ = clonePotentialDraft(state.base_)\n\t}\n\n\tfunction clonePotentialDraft(base: Objectish) {\n\t\tconst state: ES5State | undefined = base && (base as any)[DRAFT_STATE]\n\t\tif (state) {\n\t\t\tstate.finalizing_ = true\n\t\t\tconst draft = shallowCopy(state.draft_, true)\n\t\t\tstate.finalizing_ = false\n\t\t\treturn draft\n\t\t}\n\t\treturn shallowCopy(base)\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tdraft: Drafted<any, ES5State>,\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t) {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\t// configurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\treturn get(this[DRAFT_STATE], prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tset(this[DRAFT_STATE], prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tObject.defineProperty(draft, prop, desc)\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChangedES5_(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChangedES5_(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// TODO: looks quite duplicate to hasObjectChanges,\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChangedES5_(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChangedES5_(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChangedES5_(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = Object.keys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key = keys[i]\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\treturn keys.length !== Object.keys(base_).length\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\t/*#__PURE__*/\n\tfunction isEnumerable(base: AnyObject, prop: PropertyKey): boolean {\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, prop)\n\t\treturn desc && desc.enumerable ? true : false\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\tmarkChangedES5_,\n\t\twillFinalizeES5_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\tconst delta = copy_.length - base_.length\n\n\t\t// Find the first replaced index.\n\t\tlet start = 0\n\t\twhile (base_[start] === copy_[start] && start < base_.length) {\n\t\t\t++start\n\t\t}\n\n\t\t// Find the last replaced index. Search from the end to optimize splice patches.\n\t\tlet end = base_.length\n\t\twhile (end > start && base_[end - 1] === copy_[end + delta - 1]) {\n\t\t\t--end\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = start; i < end; ++i) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: copy_[i]\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: base_[i]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tconst replaceCount = patches.length\n\n\t\t// Process added indices.\n\t\tfor (let i = end + delta - 1; i >= end; --i) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches[replaceCount + i - end] = {\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\tvalue: copy_[i]\n\t\t\t}\n\t\t\tinversePatches.push({\n\t\t\t\top: REMOVE,\n\t\t\t\tpath\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: origValue}\n\t\t\t\t\t: {op: REPLACE, path, value: origValue}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!obj || typeof obj !== \"object\") return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state.scope_.immer_, state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state.scope_.immer_, state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state.scope_.immer_, state)\n\t\t\tstate.assigned_ = new Map()\n\t\t\treturn state.copy_!.clear()\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (state.copy_) {\n\t\t\t\tstate.copy_.add(value)\n\t\t\t} else if (!state.base_.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state.scope_.immer_, state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state.scope_.immer_, state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state.scope_.immer_, state)\n\t\t\treturn state.copy_!.clear()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","// Should be no imports here!\n\n// SOme things that should be evaluated before all else...\nconst hasSymbol = typeof Symbol !== \"undefined\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/* istanbul ignore next */\nfunction mini() {}\nexport const isMinified = mini.name !== \"mini\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\nexport const iteratorSymbol: typeof Symbol.iterator = hasSymbol\n\t? Symbol.iterator\n\t: (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import { produce } from 'immer';\n\nconst proversion = () => {\n  const converters = {};\n  return {\n    addConverter: (to, converter) => {\n      converters[to] = produce((draft) => {\n        draft.version = to;\n        converter(draft);\n      });\n    },\n    upgrade: (subject) => {\n      const { version = 1 } = subject;\n      const convertersToRun = Object.keys(converters)\n        .map(Number)\n        .sort()\n        .filter((x) => x > version);\n      return convertersToRun.reduce(\n        (current, to) => {\n          return {\n            applied: current.applied.concat([to]),\n            result: converters[to](current.result),\n          };\n        },\n        { applied: [], result: subject }\n      );\n    },\n  };\n};\n\nexport default proversion;\n"]}